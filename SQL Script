--NAME: Clayton Aylor 

--1. Create the Vendor, Customer, Store, Product, SalesTransaction, and SalesTransactionLine tables within your 
--database. (Note – Please do not use any tools.)
--2. Create table structures with appropriate data types, column attributes and constraints in the given data dictionary 
--documentation and establish relationships between tables. As discussed in class, include in your script appropriate 
--conditional drop table statements at the beginning of the script. 

-- Drop tables In Reverse order of buildling 
DROP TABLE IF EXISTS dbo.SALESTRANSACTIONLINE2;
DROP TABLE IF EXISTS dbo.SALESTRANSACTION2;
DROP TABLE IF EXISTS dbo.PRODUCT2;
DROP TABLE IF EXISTS dbo.STORE2;
DROP TABLE IF EXISTS dbo.CUSTOMER2;
DROP TABLE IF EXISTS dbo.VENDOR2;



--Create Vendor Table 
CREATE TABLE VENDOR2 
(
VendorID INT PRIMARY KEY NOT NULL IDENTITY (101,1),
VendorName VARCHAR(50) NOT NULL, 
VendorStAddress1 VARCHAR(50) NOT NULL, 
VendorStAddress2 VARCHAR(50) NULL, 
VendorCity VARCHAR(50) NOT NULL, 
VendorState CHAR(2) NOT NULL, 
VendorZipCode VARCHAR(10) NOT NULL, 
VendorPhone VARCHAR(20) NOT NULL
);

--Create Customer Table 
CREATE TABLE CUSTOMER2
(
CustomerID INT PRIMARY KEY NOT NULL IDENTITY (101,1),
CustFName VARCHAR(25) NOT NULL, 
CustLName VARCHAR(25) NOT NULL, 
CustMInit CHAR(1) NULL, 
CustPhone VARCHAR(20) NOT NULL, 
CustDOBirth DATE NOT NULL, 
CustGender CHAR(1) NOT NULL
);

--Create Store Table 
CREATE TABLE STORE2 
(
StoreID INT PRIMARY KEY IDENTITY(101,1),
StoreOpenDate DATE NOT NULL,
StoreStAddress VARCHAR(50) NOT NULL,
StoreCity VARCHAR(50) NOT NULL,
StoreState CHAR(2) NOT NULL,
StoreZipCode VARCHAR(10) NOT NULL
);

--Create Product Table 
CREATE TABLE PRODUCT2
(
    ProdID INT PRIMARY KEY,
    ProdName VARCHAR(100) NOT NULL,
    ProdDescription VARCHAR(500) NOT NULL,
    ProdListPrice MONEY NOT NULL CHECK (ProdListPrice >= 0),
    ProdCost MONEY NOT NULL CHECK (ProdCost >= 0),
    VendorID INT NOT NULL FOREIGN KEY REFERENCES VENDOR2(VendorID) ON DELETE CASCADE
);





--Create Salestransaction Table
CREATE TABLE SALESTRANSACTION2
(
TransactionID INT PRIMARY KEY IDENTITY(101,1),
TransDate DATE NOT NULL,
TransAmount MONEY NOT NULL,
StoreID INT NOT NULL FOREIGN KEY REFERENCES STORE2(StoreID) ON DELETE CASCADE,
CustomerID INT NOT NULL FOREIGN KEY REFERENCES CUSTOMER2(CustomerID) ON DELETE CASCADE
);


--Create SalesTransactionLine Table
CREATE TABLE SALESTRANSACTIONLINE2 
(	
TransactionLineID INT NOT NULL FOREIGN KEY REFERENCES SALESTRANSACTION2(TransactionID) ON DELETE CASCADE,
ProductID INT NOT NULL FOREIGN KEY REFERENCES PRODUCT2(ProdID) ON DELETE CASCADE, 
Quantity INT NOT NULL, 
DiscountPercent NUMERIC(5,2) NOT NULL CHECK(DiscountPercent BETWEEN 0 AND 50) DEFAULT 0 
PRIMARY KEY(TransactionLineID, ProductID)
);



--3. Create ascending nonclustered indexes for all foreign key columns in tables created for the Company Sales scenario. 
-- Create indexes for foreign key columns

-- Index for SALESTRANSACTIONLINE2
CREATE INDEX IX_SALESTRANSACTIONLINE_TransactionID ON SALESTRANSACTION2 (TransactionID);
CREATE INDEX IX_SALESTRANSACTIONLINE_ProductID ON SALESTRANSACTIONLINE2 (ProductID);

-- Indexes for SALESTRANSACTION
CREATE INDEX IX_SALESTRANSACTION_StoreID ON SALESTRANSACTION2 (StoreID);
CREATE INDEX IX_SALESTRANSACTION_CustomerID ON SALESTRANSACTION2 (CustomerID);

-- Index for PRODUCT
CREATE INDEX IX_PRODUCT_VendorID ON PRODUCT2 (VendorID);





--4. Load one test data row in each of the tables created. (Note – Do not set IDENTITY_INSERT ON.)

-- Insert data into Vendor table
INSERT INTO Vendor2 (VendorName, VendorStAddress1, VendorCity, VendorState, VendorZipCode, VendorPhone)
VALUES ('ABC Vendor', '123 Main St', 'Cityville', 'CA', '12345', '555-1234');

-- Insert data into Customer table
INSERT INTO Customer2 (CustFName, CustLName, CustPhone, CustDOBirth, CustGender)
VALUES ('John', 'Doe', '555-5678', '1990-01-15', 'M');

-- Insert data into Store table
INSERT INTO Store2 (StoreOpenDate, StoreStAddress, StoreCity, StoreState, StoreZipCode)
VALUES ('2023-01-01', '456 Oak St', 'Townsville', 'NY', '54321');

-- Insert data into Product table
INSERT INTO Product2 (ProdID, ProdName, ProdDescription, ProdListPrice, ProdCost, VendorID)
VALUES (1, 'Widget', 'A high-quality widget', 19.99, 10.00, 101);


-- Insert data into SalesTransaction table
INSERT INTO SalesTransaction2 (TransDate, TransAmount, StoreID, CustomerID)
VALUES ('2023-01-15', 100.00, 101, 101);

-- Insert data into SalesTransactionLine table
INSERT INTO SalesTransactionLine2 (TransactionLineID, ProductID, Quantity, DiscountPercent)
VALUES (101, 1, 2, 5.00);



